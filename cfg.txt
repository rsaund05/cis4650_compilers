 <program> -> <declaration-list>
 <declaration-list> -> <declaration-list> <declaration> | <declaration>
 <declaration> -> <var-declaration> | <fun-declaration>
 <var-declaration> -> <type-specifier> ID ; | <type-specifier> ID [ NUM ] ;
 <type-specifier> -> int | void
 <fun-declaration> -> <type-specifier> ID ( <params> ) <compound- stmt>

 <params> -> <param-list> | void
 <param-list> -> <param-list> , <param> | <param>
 <param> -> <type-specifier> ID | <type-specifier> ID [ ]
 
 <statement-list> -> <statement-list> <statement> |
 <statement> -> <expression> ; 
 | ; 
 | { <local-declarations> <statement-list> } 
 | if ( <expression> ) <statement> 
 | if ( <expression> ) <statement> else <statement> 
 | while ( <expression> ) <statement> 
 | return <expression> ; 
 | return ;

 <local-declarations> -> <local-declarations> <var-declaration> |
 
 <expression> -> ID = <expression> 
 | ID [ <expression> ] = <expression> 
 |<expression> <= <expression>
 |<expression> < <expression>
 |<expression> > <expression>
 |<expression> >= <expression>
 |<expression> == <expression>
 |<expression> != <expression>
 |<expression> + <expression> 
 |<expression> - <expression>
 |<expression> * <expression> 
 |<expression> / <expression> 
 |<expression> , <expression>
 |( <expression> ) 
 |ID
 |ID [ <expression> ] 
 |ID ( <expression> ) 
 |ID (  ) 
 |NUM 
